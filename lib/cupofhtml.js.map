{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/cupofhtml.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/CUPOFHTML'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nMAIN                      = @\nDATOM                     = require 'datom'\nMultimix                  = require 'multimix'\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  type_of }               = types\n#...........................................................................................................\n_defaults = { flatten: true, DATOM: null, newlines: true, }\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass @_Targeted_collection extends Multimix\n  constructor: ( target ) ->\n    super()\n    @_ = target\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass @_Tags extends @_Targeted_collection\n  address:      ( P... ) => @_.tag 'address',     { $blk: true, }, P...\n  article:      ( P... ) => @_.tag 'article',     { $blk: true, }, P...\n  aside:        ( P... ) => @_.tag 'aside',       { $blk: true, }, P...\n  blockquote:   ( P... ) => @_.tag 'blockquote',  { $blk: true, }, P...\n  dd:           ( P... ) => @_.tag 'dd',          { $blk: true, }, P...\n  details:      ( P... ) => @_.tag 'details',     { $blk: true, }, P...\n  dialog:       ( P... ) => @_.tag 'dialog',      { $blk: true, }, P...\n  div:          ( P... ) => @_.tag 'div',         { $blk: true, }, P...\n  dl:           ( P... ) => @_.tag 'dl',          { $blk: true, }, P...\n  dt:           ( P... ) => @_.tag 'dt',          { $blk: true, }, P...\n  fieldset:     ( P... ) => @_.tag 'fieldset',    { $blk: true, }, P...\n  figcaption:   ( P... ) => @_.tag 'figcaption',  { $blk: true, }, P...\n  figure:       ( P... ) => @_.tag 'figure',      { $blk: true, }, P...\n  footer:       ( P... ) => @_.tag 'footer',      { $blk: true, }, P...\n  form:         ( P... ) => @_.tag 'form',        { $blk: true, }, P...\n  h1:           ( P... ) => @_.tag 'h1',          { $blk: true, }, P...\n  h2:           ( P... ) => @_.tag 'h2',          { $blk: true, }, P...\n  h3:           ( P... ) => @_.tag 'h3',          { $blk: true, }, P...\n  h4:           ( P... ) => @_.tag 'h4',          { $blk: true, }, P...\n  h5:           ( P... ) => @_.tag 'h5',          { $blk: true, }, P...\n  h6:           ( P... ) => @_.tag 'h6',          { $blk: true, }, P...\n  header:       ( P... ) => @_.tag 'header',      { $blk: true, }, P...\n  hgroup:       ( P... ) => @_.tag 'hgroup',      { $blk: true, }, P...\n  hr:           ( P... ) => @_.tag 'hr',          { $blk: true, }, P...\n  li:           ( P... ) => @_.tag 'li',          { $blk: true, }, P...\n  main:         ( P... ) => @_.tag 'main',        { $blk: true, }, P...\n  nav:          ( P... ) => @_.tag 'nav',         { $blk: true, }, P...\n  ol:           ( P... ) => @_.tag 'ol',          { $blk: true, }, P...\n  p:            ( P... ) => @_.tag 'p',           { $blk: true, }, P...\n  pre:          ( P... ) => @_.tag 'pre',         { $blk: true, }, P...\n  section:      ( P... ) => @_.tag 'section',     { $blk: true, }, P...\n  table:        ( P... ) => @_.tag 'table',       { $blk: true, }, P...\n  ul:           ( P... ) => @_.tag 'ul',          { $blk: true, }, P...\n  #.........................................................................................................\n  a:            ( P... ) => @_.tag 'a',           P...\n  abbr:         ( P... ) => @_.tag 'abbr',        P...\n  acronym:      ( P... ) => @_.tag 'acronym',     P...\n  applet:       ( P... ) => @_.tag 'applet',      P...\n  area:         ( P... ) => @_.tag 'area',        P...\n  audio:        ( P... ) => @_.tag 'audio',       P...\n  b:            ( P... ) => @_.tag 'b',           P...\n  base:         ( P... ) => @_.tag 'base',        P...\n  basefont:     ( P... ) => @_.tag 'basefont',    P...\n  bdi:          ( P... ) => @_.tag 'bdi',         P...\n  bdo:          ( P... ) => @_.tag 'bdo',         P...\n  big:          ( P... ) => @_.tag 'big',         P...\n  body:         ( P... ) => @_.tag 'body',        P...\n  br:           ( P... ) => @_.tag 'br',          P...\n  button:       ( P... ) => @_.tag 'button',      P...\n  canvas:       ( P... ) => @_.tag 'canvas',      P...\n  caption:      ( P... ) => @_.tag 'caption',     P...\n  center:       ( P... ) => @_.tag 'center',      P...\n  cite:         ( P... ) => @_.tag 'cite',        P...\n  code:         ( P... ) => @_.tag 'code',        P...\n  col:          ( P... ) => @_.tag 'col',         P...\n  colgroup:     ( P... ) => @_.tag 'colgroup',    P...\n  data:         ( P... ) => @_.tag 'data',        P...\n  datalist:     ( P... ) => @_.tag 'datalist',    P...\n  del:          ( P... ) => @_.tag 'del',         P...\n  dfn:          ( P... ) => @_.tag 'dfn',         P...\n  em:           ( P... ) => @_.tag 'em',          P...\n  embed:        ( P... ) => @_.tag 'embed',       P...\n  font:         ( P... ) => @_.tag 'font',        P...\n  frame:        ( P... ) => @_.tag 'frame',       P...\n  frameset:     ( P... ) => @_.tag 'frameset',    P...\n  head:         ( P... ) => @_.tag 'head',        P...\n  html:         ( P... ) => @_.tag 'html',        P...\n  i:            ( P... ) => @_.tag 'i',           P...\n  iframe:       ( P... ) => @_.tag 'iframe',      P...\n  img:          ( P... ) => @_.tag 'img',         P...\n  input:        ( P... ) => @_.tag 'input',       P...\n  ins:          ( P... ) => @_.tag 'ins',         P...\n  kbd:          ( P... ) => @_.tag 'kbd',         P...\n  keygen:       ( P... ) => @_.tag 'keygen',      P...\n  label:        ( P... ) => @_.tag 'label',       P...\n  legend:       ( P... ) => @_.tag 'legend',      P...\n  link:         ( P... ) => @_.tag 'link',        P...\n  map:          ( P... ) => @_.tag 'map',         P...\n  mark:         ( P... ) => @_.tag 'mark',        P...\n  menu:         ( P... ) => @_.tag 'menu',        P...\n  menuitem:     ( P... ) => @_.tag 'menuitem',    P...\n  meta:         ( P... ) => @_.tag 'meta',        P...\n  meter:        ( P... ) => @_.tag 'meter',       P...\n  noscript:     ( P... ) => @_.tag 'noscript',    P...\n  object:       ( P... ) => @_.tag 'object',      P...\n  optgroup:     ( P... ) => @_.tag 'optgroup',    P...\n  option:       ( P... ) => @_.tag 'option',      P...\n  output:       ( P... ) => @_.tag 'output',      P...\n  param:        ( P... ) => @_.tag 'param',       P...\n  progress:     ( P... ) => @_.tag 'progress',    P...\n  q:            ( P... ) => @_.tag 'q',           P...\n  rb:           ( P... ) => @_.tag 'rb',          P...\n  rp:           ( P... ) => @_.tag 'rp',          P...\n  rt:           ( P... ) => @_.tag 'rt',          P...\n  rtc:          ( P... ) => @_.tag 'rtc',         P...\n  ruby:         ( P... ) => @_.tag 'ruby',        P...\n  s:            ( P... ) => @_.tag 's',           P...\n  samp:         ( P... ) => @_.tag 'samp',        P...\n  script:       ( P... ) => @_.tag 'script',      P...\n  select:       ( P... ) => @_.tag 'select',      P...\n  small:        ( P... ) => @_.tag 'small',       P...\n  source:       ( P... ) => @_.tag 'source',      P...\n  span:         ( P... ) => @_.tag 'span',        P...\n  strike:       ( P... ) => @_.tag 'strike',      P...\n  strong:       ( P... ) => @_.tag 'strong',      P...\n  style:        ( P... ) => @_.tag 'style',       P...\n  sub:          ( P... ) => @_.tag 'sub',         P...\n  summary:      ( P... ) => @_.tag 'summary',     P...\n  sup:          ( P... ) => @_.tag 'sup',         P...\n  tbody:        ( P... ) => @_.tag 'tbody',       P...\n  td:           ( P... ) => @_.tag 'td',          P...\n  template:     ( P... ) => @_.tag 'template',    P...\n  textarea:     ( P... ) => @_.tag 'textarea',    P...\n  tfoot:        ( P... ) => @_.tag 'tfoot',       P...\n  th:           ( P... ) => @_.tag 'th',          P...\n  thead:        ( P... ) => @_.tag 'thead',       P...\n  time:         ( P... ) => @_.tag 'time',        P...\n  title:        ( P... ) => @_.tag 'title',       P...\n  tr:           ( P... ) => @_.tag 'tr',          P...\n  track:        ( P... ) => @_.tag 'track',       P...\n  u:            ( P... ) => @_.tag 'u',           P...\n  var:          ( P... ) => @_.tag 'var',         P...\n  video:        ( P... ) => @_.tag 'video',       P...\n  wbr:          ( P... ) => @_.tag 'wbr',         P...\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass @_Specials extends @_Targeted_collection\n  doctype:      ( type = 'html' ) => @_._cram @_raw 'doctype', type\n  # img:          ( P... ) => XXXX @_.tag '!–', P...\n\n  #---------------------------------------------------------------------------------------------------------\n  raw:      ( P... ) => validate.list_of 'text', P; @_raw 'raw',  P...\n  text:     ( P... ) => validate.list_of 'text', P; @_raw 'text', P...\n  comment:  ( P... ) => validate.list_of 'text', P; @_raw 'raw',  \"<!-- #{P.join()} -->\"\n  newline:  ( P... ) => validate.list_of 'text', P; @_raw 'raw',  \"\\n\"\n\n  #---------------------------------------------------------------------------------------------------------\n  _raw: ( name, P... ) => @_._cram @_.DATOM.new_datom \"^#{name}\", { text: ( P.join '' ), $: 'ð1', }\n\n  #---------------------------------------------------------------------------------------------------------\n  link_css: ( href ) ->\n    ### `<link rel=stylesheet href=\"../reset.css\"/>` ###\n    unless ( arity = arguments.length ) is 1\n      throw new Error \"^intertext/html/link_css@2935^ expected 1 argument, got #{arity}\"\n    debug '^3334^', href\n    validate.nonempty_text href\n    return @_._cram @_.DATOM.new_datom '^link', { rel: 'stylesheet', href, }\n\n  #---------------------------------------------------------------------------------------------------------\n  script: ( x ) ->\n    unless ( arity = arguments.length ) is 1\n      throw new Error \"^intertext//html/link_js@3502^ expected 1 argument, got #{arity}\"\n    return switch type = type_of x\n      when 'text'     then @_script_src     x\n      when 'function' then @_script_literal x\n    throw new Error \"^intertext/script@4069^ expected a text or a function, got a #{type}\"\n\n  #---------------------------------------------------------------------------------------------------------\n  _script_src: ( src ) ->\n    ### `<script type=\"text/javascript\" src=\"../jquery-3.4.1.js\">` ###\n    validate.nonempty_text src\n    @_.cram 'script', { src, }\n\n  #---------------------------------------------------------------------------------------------------------\n  _script_literal: ( f ) ->\n    ### `<script type=\"text/javascript\"> var a, b; ...;</script>` ###\n    @_.cram 'script', => @raw \"(#{f.toString()})();\"\n\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@_escape_text = ( x ) ->\n  R           = x\n  R           = R.replace /&/g,   '&amp;'\n  R           = R.replace /</g,   '&lt;'\n  R           = R.replace />/g,   '&gt;'\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@_as_attribute_literal = ( x ) ->\n  R           = if isa.text x then x else JSON.stringify x\n  must_quote  = not isa._intertext_html_naked_attribute_text R\n  R           = @_escape_text R\n  R           = R.replace /'/g,   '&#39;'\n  R           = R.replace /\\n/g,  '&#10;'\n  R           = \"'\" + R + \"'\" if must_quote\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@$html_from_datoms  = ->\n  { $, } = ( require 'steampipes' ).export()\n  return $ ( d, send ) =>\n    ds = if ( isa.list d ) then d else [ d, ]\n    for d in ds\n      send @_html_from_datom { newlines: false, }, d\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@_html_from_datom = ( settings, d ) ->\n  return @_html_from_datom ( @text d )[ 0 ] if isa.text d ### TAINT ??? ###\n  DATOM.types.validate.datom_datom d\n  atxt          = ''\n  sigil         = d.$key[ 0 ]\n  tagname       = d.$key[ 1 .. ]\n  is_empty_tag  = isa._intertext_html_empty_element_tagname tagname\n  x_key         = null\n  is_block_tag  = d.$blk ? false\n  if settings.newlines\n    bnl = if is_block_tag then '\\n\\n' else ''\n    xnl = '\\n'\n  else\n    bnl = ''\n    xnl = ''\n  #.........................................................................................................\n  ### TAINT simplistic solution; namespace might already be taken? ###\n  if sigil in '[~]'\n    switch sigil\n      when '[' then sigil = '<'\n      when '~' then sigil = '^'\n      when ']' then sigil = '>'\n    [ x_key, tagname, ] = [ tagname, 'x-sys', ]\n  #.........................................................................................................\n  return ( @_escape_text d.text ? '' )            if ( sigil is '^' ) and ( tagname is 'text'     )\n  return (               d.text ? '' )            if ( sigil is '^' ) and ( tagname is 'raw'      )\n  return \"<!DOCTYPE #{d.$value ? 'html'}>#{xnl}\"  if ( sigil is '^' ) and ( tagname is 'doctype'  )\n  return \"</#{tagname}>#{bnl}\"                    if sigil is '>'\n  #.........................................................................................................\n  ### NOTE sorting atxt by keys to make result predictable: ###\n  if isa.object d.$value then  src = d.$value\n  else                          src = d\n  atxt += \" x-key=#{@_as_attribute_literal x_key}\" if x_key?\n  for key in ( Object.keys src ).sort()\n    continue if key.startsWith '$'\n    if ( value = src[ key ] ) is true then  atxt += \" #{key}\"\n    else                                    atxt += \" #{key}=#{@_as_attribute_literal value}\"\n  #.........................................................................................................\n  ### TAINT make self-closing elements configurable, depend on HTML5 type ###\n  slash     = if ( sigil is '<' ) or is_empty_tag then '' else \"</#{tagname}>#{bnl}\"\n  x_sys_key = if x_key? then \"<x-sys-key>#{x_key}</x-sys-key>\" else ''\n  return \"<#{tagname}>#{slash}#{x_sys_key}\" if atxt is ''\n  return \"<#{tagname}#{atxt}>#{x_sys_key}#{slash}\"\n\n\n\n\n\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\nclass @Cupofhtml extends DATOM.Cupofdatom\n  # @include CUPOFHTML, { overwrite: false, }\n  # @extend MAIN, { overwrite: false, }\n  _defaults:      _defaults\n  last_expansion: null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( settings = null) ->\n    super { _defaults..., settings..., }\n    @H = new MAIN._Tags     @\n    @S = new MAIN._Specials @\n    return @\n\n  #---------------------------------------------------------------------------------------------------------\n  expand: -> return @last_expansion = super()\n\n  #---------------------------------------------------------------------------------------------------------\n  new_tag: ( name, attributes ) ->\n    f           = ( P... ) -> @_.tag name, attributes, P...\n    @H[ name ]  = f.bind @H\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  tag: ( name, content... ) ->\n    validate.intertext_html_tagname name if name isnt null\n    @cram name, content...\n\n  #---------------------------------------------------------------------------------------------------------\n  as_html: -> return ( MAIN._html_from_datom @.settings, d for d in @expand() ).join ''\n\n\n\n\n\n"
  ]
}