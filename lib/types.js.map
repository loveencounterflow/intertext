{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nL                         = @\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_shy',\n  tests:\n    \"x is a text\":                   \t\t\t\t\t( x ) -> @isa.text                      x\n    \"x ends with soft hyphen\":       \t\t\t\t\t( x ) -> x[ x.length - 1 ] is '\\u00ad'\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'intertext_template_name',\n#   tests:\n#     \"x is a nonempty_text\":                   ( x ) -> @isa.nonempty_text                      x\n#     \"x is name of template\":                  ( x ) -> @isa.function ( require './templates' )[ x ]\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT consider to use JS regex unicode properties:\n\n```\n/\\p{Script_Extensions=Latin}/u\n/\\p{Script=Latin}/u\n/\\p{Script_Extensions=Cyrillic}/u\n/\\p{Script_Extensions=Greek}/u\n/\\p{Unified_Ideograph}/u\n/\\p{Script=Han}/u\n/\\p{Script_Extensions=Han}/u\n/\\p{Ideographic}/u\n/\\p{IDS_Binary_Operator}/u\n/\\p{IDS_Trinary_Operator}/u\n/\\p{Radical}/u\n/\\p{White_Space}/u\n/\\p{Script_Extensions=Hiragana}/u\n/\\p{Script=Hiragana}/u\n/\\p{Script_Extensions=Katakana}/u\n/\\p{Script=Katakana}/u\n```\n\n###\nregex_cid_ranges =\n  hiragana:     '[\\u3041-\\u3096]'\n  katakana:     '[\\u30a1-\\u30fa]'\n  kana:         '[\\u3041-\\u3096\\u30a1-\\u30fa]'\n  ideographic:  '[\\u3006-\\u3007\\u3021-\\u3029\\u3038-\\u303a\\u3400-\\u4db5\\u4e00-\\u9fef\\uf900-\\ufa6d\\ufa70-\\ufad9\\u{17000}-\\u{187f7}\\u{18800}-\\u{18af2}\\u{1b170}-\\u{1b2fb}\\u{20000}-\\u{2a6d6}\\u{2a700}-\\u{2b734}\\u{2b740}-\\u{2b81d}\\u{2b820}-\\u{2cea1}\\u{2ceb0}-\\u{2ebe0}\\u{2f800}-\\u{2fa1d}]'\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT kludge; this will be re-implemented in InterText ###\n@interplot_regex_cjk_property_terms = [\n  'Ideographic'                     ### https://unicode.org/reports/tr44/#Ideographic ###\n  'Radical'\n  'IDS_Binary_Operator'\n  'IDS_Trinary_Operator'\n  'Script_Extensions=Hiragana'\n  'Script_Extensions=Katakana'\n  'Script_Extensions=Hangul'\n  'Script_Extensions=Han'\n  ]\n\n#-----------------------------------------------------------------------------------------------------------\n@_regex_any_of_cjk_property_terms = ->\n  return '[' + ( ( \"\\\\p{#{t}}\" for t in @interplot_regex_cjk_property_terms ).join '' ) + ']'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_with_hiragana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? has hiragana':           ( x ) -> ( x.match ///#{regex_cid_ranges.hiragana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_with_katakana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? has katakana':           ( x ) -> ( x.match ///#{regex_cid_ranges.katakana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_with_kana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? has kana':               ( x ) -> ( x.match ///#{regex_cid_ranges.kana}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_with_ideographic',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? has ideographic':        ( x ) -> ( x.match ///#{regex_cid_ranges.ideographic}///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_hiragana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? is hiragana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.hiragana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_katakana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? is katakana':            ( x ) -> ( x.match ///^#{regex_cid_ranges.katakana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_kana',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? is kana':                ( x ) -> ( x.match ///^#{regex_cid_ranges.kana}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_text_ideographic',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? is ideographic':         ( x ) -> ( x.match ///^#{regex_cid_ranges.ideographic}+$///u )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'interplot_text_cjk',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? is cjk':                 ( x ) -> ( x.match /// ^ #{L._regex_any_of_cjk_property_terms()}+ $ /// )?\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'interplot_text_with_cjk',\n  tests:\n    '? is a text':              ( x ) -> @isa.text x\n    '? has cjk':                ( x ) -> ( x.match ///   #{L._regex_any_of_cjk_property_terms()}+   /// )?\n\n\n#===========================================================================================================\n# HTML\n#-----------------------------------------------------------------------------------------------------------\n### thx to https://www.w3.org/TR/xml ###\ntagname_head_pattern = ///\n  a-z\n  A-Z\n  :_\n  \\xc0-\\xd6\n  \\xd8-\\xf6\n  \\u00f8-\\u02ff\n  \\u0370-\\u037d\n  \\u037f-\\u1fff\n  \\u200c-\\u200d\n  \\u2070-\\u218f\n  \\u2c00-\\u2fef\n  \\u3001-\\ud7ff\n  \\uf900-\\ufdcf\n  \\ufdf0-\\ufffd\n  \\u{10000}-\\u{effff} ///u\ntagname_tail_pattern = ///\n  \\.-\n  0-9\n  \\xb7\n  \\u0300-\\u036f\n  \\u203f-\\u2040 ///u\ntagname_pattern = /// ^\n  [#{tagname_head_pattern.source}]\n  [#{tagname_head_pattern.source}#{tagname_tail_pattern.source}]* $ ///u ### must NOT set global flag ###\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_html_tagname',\n  tests:\n    \"x is a text\":                    ( x ) -> @isa.text x\n    \"x matches tagname_pattern\":      ( x ) -> tagname_pattern.test x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'intertext_html_naked_attribute_value',\n  ### thx to https://raw.githubusercontent.com/mathiasbynens/mothereff.in/master/unquoted-attributes/eff.js\n  also see https://mothereff.in/unquoted-attributes,\n  https://mathiasbynens.be/notes/unquoted-attribute-values ###\n  tests:\n    \"x is a text\":                            ( x ) -> @isa.text x\n    \"x isa intertext_html_naked_attribute_text\":  ( x ) -> @isa._intertext_html_naked_attribute_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare '_intertext_html_naked_attribute_text', ( x ) -> /^[^ \\t\\n\\f\\r\"'`=<>]+$/.test x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'parse_html_settings',\n#   tests:\n#     \"x is an object\":                       ( x ) -> @isa.object x\n#     \"x.format is known\":                    ( x ) -> x.format in [ 'html5', 'mkts', ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# @defaults =\n#   settings:\n#     parse_html_settings:\n#       format:     'html5'\n\n\n\n\n"
  ]
}