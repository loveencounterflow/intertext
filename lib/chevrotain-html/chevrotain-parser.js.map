{
  "version": 3,
  "file": "chevrotain-parser.js",
  "sourceRoot": "../..",
  "sources": [
    "src/chevrotain-html/chevrotain-parser.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\r\n\r\n'use strict'\r\n\r\n############################################################################################################\r\nCND                       = require 'cnd'\r\nrpr                       = CND.rpr\r\nbadge                     = 'CHEVROTAIN-HTML-PARSER'\r\nlog                       = CND.get_logger 'plain',     badge\r\ninfo                      = CND.get_logger 'info',      badge\r\nwhisper                   = CND.get_logger 'whisper',   badge\r\nalert                     = CND.get_logger 'alert',     badge\r\ndebug                     = CND.get_logger 'debug',     badge\r\nwarn                      = CND.get_logger 'warn',      badge\r\nhelp                      = CND.get_logger 'help',      badge\r\nurge                      = CND.get_logger 'urge',      badge\r\necho                      = CND.echo.bind CND\r\n#...........................................................................................................\r\n{ assign\r\n  jr }                    = CND\r\n{ CstParser }             = require 'chevrotain'\r\n{ tokensDictionary: t }   = require './chevrotain-lexer'\r\n\r\n\r\n#-----------------------------------------------------------------------------------------------------------\r\nclass Xml_parser extends CstParser\r\n\r\n  #---------------------------------------------------------------------------------------------------------\r\n  constructor: ->\r\n    super t, { nodeLocationTracking: 'full', }\r\n    $ = @\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    @RULE 'document', =>\r\n      @MANY =>\r\n        @OR [\r\n          { ALT: => @CONSUME t.o_doctype    }\r\n          { ALT: => @CONSUME t.o_xmldecl    }\r\n          { ALT: => @CONSUME t.o_pi         }\r\n          { ALT: => @CONSUME t.o_cdata      }\r\n          { ALT: => @CONSUME t.o_comment    }\r\n          { ALT: => @CONSUME t.o_text       }\r\n          { ALT: => @CONSUME t.stm_text     }\r\n          { ALT: => @SUBRULE @osntag        }\r\n          { ALT: => @SUBRULE @ctag          }\r\n          { ALT: => @CONSUME t.stm_slash2   }\r\n          ]\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    @RULE 'osntag', => ### `<a b=c>`, `<a b=c/>`, or `<a b=c/` ###\r\n      @CONSUME t.i_open\r\n      @CONSUME t.i_name\r\n      @OPTION => @SUBRULE @attributes\r\n      @OR [\r\n        { ALT: => @CONSUME t.i_close        }\r\n        { ALT: => @CONSUME t.i_slash_close  }\r\n        { ALT: => @CONSUME t.stm_slash1     }\r\n        ]\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    @RULE 'ctag', => ### `</a>` ###\r\n      @CONSUME t.i_slash_open\r\n      @CONSUME t.i_name\r\n      @CONSUME t.i_close\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    @RULE 'attributes', =>\r\n      @AT_LEAST_ONE => @SUBRULE @attribute\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    @RULE 'attribute', =>\r\n      @CONSUME t.i_name\r\n      @OPTION =>\r\n        @CONSUME t.v_equals\r\n        @CONSUME t.v_value\r\n\r\n    #-------------------------------------------------------------------------------------------------------\r\n    this.performSelfAnalysis()\r\n\r\n#-----------------------------------------------------------------------------------------------------------\r\n@parser = new Xml_parser()\r\n\r\n#-----------------------------------------------------------------------------------------------------------\r\n@cst_from_token = ( tokenization, parser_start ) ->\r\n  @parser.input = tokenization.tokens\r\n  return @parser[ parser_start ]()\r\n\r\n#-----------------------------------------------------------------------------------------------------------\r\n@parse = ( tokenization, parser_start ) ->\r\n  ### NOTE put potential reorganizations of results here ###\r\n  cst     = @cst_from_token tokenization, parser_start\r\n  errors  = @parser.errors\r\n  return { cst, errors, }\r\n\r\n\r\n\r\n\r\n"
  ]
}