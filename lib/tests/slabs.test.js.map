{
  "version": 3,
  "file": "slabs.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/slabs.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/TESTS/SLABS'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n{ jr, }                   = CND\n#...........................................................................................................\nDATOM                     = new ( require 'datom' ).Datom { dirty: false, }\n{ new_datom\n  lets\n  select }                = DATOM.export()\ntypes                     = require '../types'\n{ isa\n  validate\n  # cast\n  # declare\n  # declare_cast\n  # check\n  # sad\n  # is_sad\n  # is_happy\n  type_of }               = types\n#...........................................................................................................\ntest                      = require 'guy-test'\nINTERTEXT                 = require '../..'\n\n\n#===========================================================================================================\n# TESTS\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTEXT.SLABS.slabs_from_text\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"\",{\"slabs\":[],\"ends\":\"\"},null]\n    [\"a very fine day\",{\"slabs\":[\"a\",\"very\",\"fine\",\"day\"],\"ends\":\"___x\"},null]\n    [\"a cro­mu­lent so­lu­tion\",{\"slabs\":[\"a\",\"cro\",\"mu\",\"lent\",\"so\",\"lu\",\"tion\"],\"ends\":\"_||_||x\"},null]\n    [\"䷾Letterpress printing\",{\"slabs\":[\"䷾Letterpress\",\"printing\"],\"ends\":\"_x\"},null]\n    [\"ベルリンBerlin\",{\"slabs\":[\"ベ\",\"ル\",\"リ\",\"ン\",\"Berlin\"],\"ends\":\"xxxxx\"},null]\n    [\"其法用膠泥刻字、薄如錢唇\",{\"slabs\":[\"其\",\"法\",\"用\",\"膠\",\"泥\",\"刻\",\"字、\",\"薄\",\"如\",\"錢\",\"唇\"],\"ends\":\"xxxxxxxxxxx\"},null]\n    [\"over-guess­ti­mate\",{\"slabs\":[\"over-\",\"guess\",\"ti\",\"mate\"],\"ends\":\"x||x\"},null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      # debug '^44453^', INTERTEXT.HYPH.new_hyphenator()\n      # debug '^44453^', INTERTEXT.HYPH.reveal_hyphens INTERTEXT.HYPH.new_hyphenator() 'fantastic'\n      # debug '^777801^', INTERTEXT.SLABS.slabs_from_text probe\n      resolve INTERTEXT.SLABS.slabs_from_text probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTEXT.SLABS.assemble (1)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"\",\"\",null]\n    [\"a very fine day\",\"a very fine day\",null]\n    [\"a cro\\xadmu\\xadlent so\\xadlu\\xadtion\",\"a cromulent solution\",null]\n    [\"䷾Letterpress printing\",\"䷾Letterpress printing\",null]\n    [\"ベルリンBerlin\",\"ベルリンBerlin\",null]\n    [\"其法用膠泥刻字、薄如錢唇\",\"其法用膠泥刻字、薄如錢唇\",null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      resolve INTERTEXT.SLABS.assemble INTERTEXT.SLABS.slabs_from_text probe\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTEXT.SLABS.assemble (2)\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [\"\",\"\",null]\n    [\"a very fine day\",\"fine day\",null]\n    [\"a cro­mu­lent so­lu­tion\",\"mulent solu-\",null]\n    [\"䷾Letterpress printing\",\"\",null]\n    [\"ベルリンBerlin\",\"リンBerlin\",null]\n    [\"其法用膠泥刻字、薄如錢唇\",\"用膠泥刻\",null]\n    [\"over-guess\\xadti\\xadmate\",\"timate\",null]\n    ]\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      slb = INTERTEXT.SLABS.slabs_from_text probe\n      resolve INTERTEXT.SLABS.assemble slb, 2, 5\n  #.........................................................................................................\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTEXT.SLABS.assemble (3)\" ] = ( T, done ) ->\n  probe   = \"a very fine day for a cro\\xadmu\\xadlent so\\xadlu\\xadtion\"\n  matcher = [\n    \"a\"\n    \"a very\"\n    \"a very fine\"\n    \"a very fine day\"\n    \"a very fine day for\"\n    \"a very fine day for a\"\n    \"a very fine day for a cro-\"\n    \"a very fine day for a cromu-\"\n    \"a very fine day for a cromulent\"\n    \"a very fine day for a cromulent so-\"\n    \"a very fine day for a cromulent solu-\"\n    \"a very fine day for a cromulent solution\"\n    ]\n  slb     = INTERTEXT.SLABS.slabs_from_text probe\n  info slb\n  result  = ( INTERTEXT.SLABS.assemble slb, 0, idx for idx in [ 0 ... slb.slabs.length ] )\n  for line, idx in result\n    echo ( CND.white line.padEnd 50 ), idx, line.length\n  idx_1 = 11\n  for idx_2 in [ idx_1 ... slb.slabs.length ]\n    line = INTERTEXT.SLABS.assemble slb, idx_1, idx_2\n    idx_1_txt = ( \"#{idx_1}\".padEnd 5 )\n    idx_2_txt = ( \"#{idx_2}\".padEnd 5 )\n    echo ( CND.yellow line.padEnd 50 ), idx_1_txt, idx_2_txt, line.length\n  help jr result\n  T.eq result, matcher\n  done()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"INTERTEXT.SLABS.assemble (4)\" ] = ( T, done ) ->\n  probe   = \"over-guess\\xadti\\xadmate\"\n  matcher = [\n    \"over-\"\n    \"over-guess-\"\n    \"over-guessti-\"\n    \"over-guesstimate\"\n    ]\n  slb     = INTERTEXT.SLABS.slabs_from_text probe\n  result  = ( INTERTEXT.SLABS.assemble slb, 0, idx for idx in [ 0 ... slb.slabs.length ] )\n  help jr result\n  T.eq result, matcher\n  done()\n  return null\n\n\n\n############################################################################################################\nif module is require.main then do => # await do =>\n  # await @_demo()\n  test @\n  help 'ok'\n  # test @[ \"demo\" ]\n"
  ]
}