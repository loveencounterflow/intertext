{
  "version": 3,
  "file": "colors.js",
  "sourceRoot": "..",
  "sources": [
    "src/colors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/COLORS'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n{ jr\n  assign }                = CND\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\nconvert_color             = require 'color-convert'\n# X                         = require 'cnd/lib/TRM-VT100-ANALYZER'\nCRYPTO                    = require 'crypto'\n\n\n#-----------------------------------------------------------------------------------------------------------\n### thx to https://css-tricks.com/snippets/css/named-colors-and-hex-equivalents/ ###\n@hex_by_names =\n  AliceBlue:              '#F0F8FF'\n  AntiqueWhite:           '#FAEBD7'\n  Aqua:                   '#00FFFF'\n  Aquamarine:             '#7FFFD4'\n  Azure:                  '#F0FFFF'\n  Beige:                  '#F5F5DC'\n  Bisque:                 '#FFE4C4'\n  Black:                  '#000000'\n  BlanchedAlmond:         '#FFEBCD'\n  Blue:                   '#0000FF'\n  BlueViolet:             '#8A2BE2'\n  Brown:                  '#A52A2A'\n  BurlyWood:              '#DEB887'\n  CadetBlue:              '#5F9EA0'\n  Chartreuse:             '#7FFF00'\n  Chocolate:              '#D2691E'\n  Coral:                  '#FF7F50'\n  CornflowerBlue:         '#6495ED'\n  Cornsilk:               '#FFF8DC'\n  Crimson:                '#DC143C'\n  Cyan:                   '#00FFFF'\n  DarkBlue:               '#00008B'\n  DarkCyan:               '#008B8B'\n  DarkGoldenRod:          '#B8860B'\n  DarkGrey:               '#A9A9A9'\n  DarkGreen:              '#006400'\n  DarkKhaki:              '#BDB76B'\n  DarkMagenta:            '#8B008B'\n  DarkOliveGreen:         '#556B2F'\n  Darkorange:             '#FF8C00'\n  DarkOrchid:             '#9932CC'\n  DarkRed:                '#8B0000'\n  DarkSalmon:             '#E9967A'\n  DarkSeaGreen:           '#8FBC8F'\n  DarkSlateBlue:          '#483D8B'\n  DarkSlateGrey:          '#2F4F4F'\n  DarkTurquoise:          '#00CED1'\n  DarkViolet:             '#9400D3'\n  DeepPink:               '#FF1493'\n  DeepSkyBlue:            '#00BFFF'\n  DimGrey:                '#696969'\n  DodgerBlue:             '#1E90FF'\n  FireBrick:              '#B22222'\n  FloralWhite:            '#FFFAF0'\n  ForestGreen:            '#228B22'\n  Fuchsia:                '#FF00FF'\n  Gainsboro:              '#DCDCDC'\n  GhostWhite:             '#F8F8FF'\n  Gold:                   '#FFD700'\n  GoldenRod:              '#DAA520'\n  Grey:                   '#808080'\n  Green:                  '#008000'\n  GreenYellow:            '#ADFF2F'\n  HoneyDew:               '#F0FFF0'\n  HotPink:                '#FF69B4'\n  IndianRed:              '#CD5C5C'\n  Indigo:                 '#4B0082'\n  Ivory:                  '#FFFFF0'\n  Khaki:                  '#F0E68C'\n  Lavender:               '#E6E6FA'\n  LavenderBlush:          '#FFF0F5'\n  LawnGreen:              '#7CFC00'\n  LemonChiffon:           '#FFFACD'\n  LightBlue:              '#ADD8E6'\n  LightCoral:             '#F08080'\n  LightCyan:              '#E0FFFF'\n  LightGoldenRodYellow:   '#FAFAD2'\n  LightGrey:              '#D3D3D3'\n  LightGreen:             '#90EE90'\n  LightPink:              '#FFB6C1'\n  LightSalmon:            '#FFA07A'\n  LightSeaGreen:          '#20B2AA'\n  LightSkyBlue:           '#87CEFA'\n  LightSlateGrey:         '#778899'\n  LightSteelBlue:         '#B0C4DE'\n  LightYellow:            '#FFFFE0'\n  Lime:                   '#00FF00'\n  LimeGreen:              '#32CD32'\n  Linen:                  '#FAF0E6'\n  Magenta:                '#FF00FF'\n  Maroon:                 '#800000'\n  MediumAquaMarine:       '#66CDAA'\n  MediumBlue:             '#0000CD'\n  MediumOrchid:           '#BA55D3'\n  MediumPurple:           '#9370D8'\n  MediumSeaGreen:         '#3CB371'\n  MediumSlateBlue:        '#7B68EE'\n  MediumSpringGreen:      '#00FA9A'\n  MediumTurquoise:        '#48D1CC'\n  MediumVioletRed:        '#C71585'\n  MidnightBlue:           '#191970'\n  MintCream:              '#F5FFFA'\n  MistyRose:              '#FFE4E1'\n  Moccasin:               '#FFE4B5'\n  NavajoWhite:            '#FFDEAD'\n  Navy:                   '#000080'\n  OldLace:                '#FDF5E6'\n  Olive:                  '#808000'\n  OliveDrab:              '#6B8E23'\n  Orange:                 '#FFA500'\n  OrangeRed:              '#FF4500'\n  Orchid:                 '#DA70D6'\n  PaleGoldenRod:          '#EEE8AA'\n  PaleGreen:              '#98FB98'\n  PaleTurquoise:          '#AFEEEE'\n  PaleVioletRed:          '#D87093'\n  PapayaWhip:             '#FFEFD5'\n  PeachPuff:              '#FFDAB9'\n  Peru:                   '#CD853F'\n  Pink:                   '#FFC0CB'\n  Plum:                   '#DDA0DD'\n  PowderBlue:             '#B0E0E6'\n  Purple:                 '#800080'\n  Red:                    '#FF0000'\n  RosyBrown:              '#BC8F8F'\n  RoyalBlue:              '#4169E1'\n  SaddleBrown:            '#8B4513'\n  Salmon:                 '#FA8072'\n  SandyBrown:             '#F4A460'\n  SeaGreen:               '#2E8B57'\n  SeaShell:               '#FFF5EE'\n  Sienna:                 '#A0522D'\n  Silver:                 '#C0C0C0'\n  SkyBlue:                '#87CEEB'\n  SlateBlue:              '#6A5ACD'\n  SlateGrey:              '#708090'\n  Snow:                   '#FFFAFA'\n  SpringGreen:            '#00FF7F'\n  SteelBlue:              '#4682B4'\n  Tan:                    '#D2B48C'\n  Teal:                   '#008080'\n  Thistle:                '#D8BFD8'\n  Tomato:                 '#FF6347'\n  Turquoise:              '#40E0D0'\n  Violet:                 '#EE82EE'\n  Wheat:                  '#F5DEB3'\n  White:                  '#FFFFFF'\n  WhiteSmoke:             '#F5F5F5'\n  Yellow:                 '#FFFF00'\n  YellowGreen:            '#9ACD32'\n\n#-----------------------------------------------------------------------------------------------------------\n@name_selection = [\n  'Aqua', 'Aquamarine', 'Bisque', 'Blue', 'BlueViolet', 'Brown', 'BurlyWood', 'CadetBlue', 'Chartreuse',\n  'Chocolate', 'Coral', 'CornflowerBlue', 'Crimson', 'Cyan', 'DarkBlue', 'DarkCyan', 'DarkGoldenRod',\n  'DarkGrey', 'DarkGreen', 'DarkKhaki', 'DarkMagenta', 'DarkOliveGreen', 'Darkorange', 'DarkOrchid',\n  'DarkRed', 'DarkSalmon', 'DarkSeaGreen', 'DarkSlateBlue', 'DarkSlateGrey', 'DarkTurquoise', 'DarkViolet',\n  'DeepPink', 'DeepSkyBlue', 'DodgerBlue', 'FireBrick', 'ForestGreen', 'Fuchsia', 'Gold', 'GoldenRod',\n  'Green', 'GreenYellow', 'HotPink', 'IndianRed', 'Indigo', 'Khaki', 'LawnGreen', 'LightBlue', 'LightCoral',\n  'LightCyan', 'LightGreen', 'LightPink', 'LightSalmon', 'LightSeaGreen', 'LightSkyBlue', 'LightSlateGrey',\n  'LightSteelBlue', 'LightYellow', 'Lime', 'LimeGreen', 'Magenta', 'Maroon', 'MediumAquaMarine',\n  'MediumBlue', 'MediumOrchid', 'MediumPurple', 'MediumSeaGreen', 'MediumSlateBlue', 'MediumSpringGreen',\n  'MediumTurquoise', 'MediumVioletRed', 'MidnightBlue', 'Navy', 'Olive', 'OliveDrab', 'Orange', 'OrangeRed',\n  'Orchid', 'PaleGoldenRod', 'PaleGreen', 'PaleTurquoise', 'PaleVioletRed', 'PapayaWhip', 'PeachPuff',\n  'Peru', 'Pink', 'Plum', 'PowderBlue', 'Purple', 'Red', 'RosyBrown', 'RoyalBlue', 'SaddleBrown', 'Salmon',\n  'SandyBrown', 'SeaGreen', 'SeaShell', 'Sienna', 'Silver', 'SkyBlue', 'SlateBlue', 'SlateGrey',\n  'SpringGreen', 'SteelBlue', 'Tan', 'Teal', 'Thistle', 'Tomato', 'Turquoise', 'Violet', 'Wheat', 'White',\n  'Yellow', 'YellowGreen', ]\n\n#-----------------------------------------------------------------------------------------------------------\ndeclare 'hexcolor',\n  tests:\n    \"x is a text\":                  ( x ) -> @isa.text x\n    \"x matches hex color pattern\":  ( x ) -> @isa.true ( x.match /^#[0-9a-fA-F]{6}$/ )?\n\n#-----------------------------------------------------------------------------------------------------------\n@hexcolor_from_name = ( name ) ->\n  validate.nonempty_text name\n  unless ( R = @hex_by_names[ name ] )?\n    throw new Error \"µ33420 unknown color name #{rpr name}\"\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@rgb_from_hexcolor = ( hexcolor ) ->\n  validate.hexcolor hexcolor\n  return [\n    ( parseInt hexcolor[ 1 .. 2 ], 16 ),\n    ( parseInt hexcolor[ 3 .. 4 ], 16 ),\n    ( parseInt hexcolor[ 5 .. 6 ], 16 ), ]\n\n#-----------------------------------------------------------------------------------------------------------\n@rgb_from_name = ( name ) -> @rgb_from_hexcolor @hexcolor_from_name name\n\n#-----------------------------------------------------------------------------------------------------------\n@ansi256_code_from_name = ( name ) ->\n  code = convert_color.rgb.ansi256 @rgb_from_name name\n  return \"\\x1b[38;05;#{code}m\"\n\n#-----------------------------------------------------------------------------------------------------------\n@ansi24bit_code_from_rgb = ( rgb, background = false ) ->\n  [ r, g, b, ]  = rgb\n  fb            = if background then 48 else 38\n  return \"\\x1b[#{fb};2;#{r};#{g};#{b}m\"\n\n#-----------------------------------------------------------------------------------------------------------\n@ansi24bit_code_from_lch = ( lch, background = false ) ->\n  return @ansi24bit_code_from_rgb ( convert_color.lch.rgb lch ), background\n\n#-----------------------------------------------------------------------------------------------------------\n@ansi24bit_code_from_name = ( name, background = false ) ->\n  return @ansi24bit_code_from_rgb ( @rgb_from_name name ), background\n\n#-----------------------------------------------------------------------------------------------------------\n@numerical_sha1_from_text = ( text ) ->\n  hash = CRYPTO.createHash 'sha1'\n  hash.update text\n  return parseInt ( hash.digest 'hex' )[ .. 8 ], 16\n\n#-----------------------------------------------------------------------------------------------------------\n@color_name_from_text = ( text ) ->\n  n     = @name_selection.length\n  sha1  = @numerical_sha1_from_text text\n  return @name_selection[ sha1 %% n ]\n\n#-----------------------------------------------------------------------------------------------------------\n@ansi_code_from_text = ( text ) ->\n  return @ansi256_code_from_name @color_name_from_text text\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_1 = ->\n  debug @hexcolor_from_name 'Azure'\n  debug @rgb_from_name 'Azure'\n  debug @ansi256_code_from_name 'Azure'\n  # debug X.get_css_source()\n  # debug convert_color.rgb.ansi16 255, 0, 0\n  # for name of @hex_by_names\n  for name in @name_selection\n    c = ( x ) -> x\n    c = CND.reverse\n    debug c ( @ansi256_code_from_name name ) + ( \"  #{name}  \".padEnd 30 )\n  for n in [ 1 .. 3 ]\n    debug CND.reverse ( @ansi_code_from_text \"x#{n}\" ) + \"  #{n}  \"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_truecolor = ->\n  # debug @hexcolor_from_name 'Azure'\n  # debug @ansi24bit_code_from_name 'Azure'\n  for name of @hex_by_names\n    # c = ( x ) -> x\n    c = CND.reverse\n    debug c ( @ansi24bit_code_from_name name ) + \"  #{name}  \"\n  return null\n\n\n@show_gradient = ( cold_lch, hot_lch ) ->\n  @_show_gradient cold_lch, hot_lch\n  # cold_lch[ 2 ] += 360\n  # @_show_gradient cold_lch, hot_lch\n\n@_show_gradient = ( cold_lch, hot_lch ) ->\n  reset         = \"\\x1b[0m\"\n  step_count    = 13\n  delta_L       = ( hot_lch[ 0 ] - cold_lch[ 0 ] ) / ( step_count - 1 )\n  delta_C       = ( hot_lch[ 1 ] - cold_lch[ 1 ] ) / ( step_count - 1 )\n  delta_H       = ( hot_lch[ 2 ] - cold_lch[ 2 ] ) / ( step_count - 1 )\n  [ L, C, H, ]  = cold_lch\n  scale         = ''\n  for _ in [ 1 .. step_count ]\n    scale += ( @ansi24bit_code_from_lch [ L, C, H, ], true ) + ' '\n    L += delta_L\n    C += delta_C\n    H += delta_H\n  echo scale + reset\n# L: 0 .. 100\n# H: 0 .. 132\n# C: 0 .. 360 (wraparound)\n@show_gradient [  57,  98, 271, ], [  43,  72,  17, ]\n@show_gradient [  57,  98, 271, ], [  43,  72, 360, ]\n@show_gradient [  57,  98, 271, ], [  43,  72, 380, ]\n@show_gradient [ 153, 105, 200, ], [  53, 105,  60, ]\n@show_gradient [ 153, 105, 200, ], [  53, 105,  20, ]\n@show_gradient [  90, 105, 200, ], [  53, 105,  30, ]\nhelp \"see https://github.com/d3/d3-color\"\nhelp \"see https://observablehq.com/@d3/achromatic-interpolation?collection=@d3/d3-color\"\nhelp \"see https://observablehq.com/@d3/working-with-color?collection=@d3/d3-color\"\nhelp \"see https://observablehq.com/@d3/sequential-scales?collection=@d3/d3-color\"\nreturn null\n\n\n\n\n############################################################################################################\nif module is require.main then do =>\n  # @demo_1()\n  # @demo_truecolor()\n  debug type_of @ansi24bit_code_from_name\n  debug ( k for k of @ when /24/.test k )\n  debug rpr @ansi24bit_code_from_rgb [ 100, 150, 0, ], false\n  debug rpr @ansi24bit_code_from_rgb [ 100, 150, 0, ], true\n  color   = ''\n  ### NOTE CFN = Color From Name ###\n  @cfn = ( fg, bg = 'Black' ) -> ( @ansi24bit_code_from_name fg ) + ( @ansi24bit_code_from_name bg, true)\n  text    = CND.bold ' WXD '\n  # echo color + text\n  BAR = require './bar'\n  color_1 = @cfn 'Green', 'Black'\n  color_2 = @cfn 'Orchid', 'Green'\n  reset   = \"\\x1b[0m\"\n  puffer  = ( @cfn 'Black' ) + ' '\n  border  = ( @cfn 'White', 'Black' ) + '▏'\n  echo color_1\n  for n in [ 70 .. 96 ] by +1\n    # echo ( BAR.hollow_percentage_bar n  ) + text\n    # echo color_1 + ( BAR.hollow_percentage_bar n  ) + text\n    echo puffer + ( color_1 + BAR.percentage_bar n )+ border + puffer + ( color_2 + \" #{n} \" ) + reset\n  debug ( k for k of convert_color ).sort().join ' '\n  debug @rgb_from_name 'Red'\n  debug convert_color.rgb.lch @rgb_from_name 'Green'\n  debug convert_color.rgb.lch @rgb_from_name 'Red'\n  # debug ( @ansi24bit_code_from_rgb convert_color.rgb.lch [ 53, 105, 40 ] ) + 'helo'\n  demo_lch_gamut = ->\n    ### see http://lea.verou.me/2020/04/lch-colors-in-css-what-why-and-how ###\n    L =  53\n    C = 105\n    H =  40\n    echo CND.blue 'Colors!'\n    # for L in [ 0 .. 100 ] by +10\n    for H in [ 0 .. 360 ] by +10\n      line = CND.yellow \" LCH #{L},#{C},#{H} \"\n      for C in [ 0 .. 100 ] by +10\n        line += ( @ansi24bit_code_from_lch [ L, C, H, ], true ) + ( '  ' )\n      echo line + ( CND.black ' ' )\n  # cold_lch     = [ 46, 72, 136 ]\n  # cold_lch     = [ 53, 105, 136 ]\n  # CND.ring_bell()\n  # echo \"\\x1b]0;helo world\"\n  echo \"\\x1b]0;second try\\x07\"\n  echo \"\\x1b]1;second try\\x07\"\n  echo \"\\x1b]2;second try\\x07\"\n\n\n\n"
  ]
}