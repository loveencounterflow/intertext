{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "/home/flow/jzr/intertext/src/bar.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/HYPHENATION'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  type_of }               = types\n\n\n#-----------------------------------------------------------------------------------------------------------\n@percentage_bar = ( n ) ->\n  if n is null or n <= 0  then return '             '\n  if n > 100              then return '████████████▌'\n  R = '█'.repeat n // 8\n  switch n %% 8\n    when 0 then R += ' '\n    when 1 then R += '▏'\n    when 2 then R += '▎'\n    when 3 then R += '▍'\n    when 4 then R += '▌'\n    when 5 then R += '▋'\n    when 6 then R += '▊'\n    when 7 then R += '▉'\n  return R.padEnd 13\n\n#-----------------------------------------------------------------------------------------------------------\n@hollow_percentage_bar = ( n ) ->\n  if n is null or n <= 0  then return '░░░░░░░░░░░░░'\n  if n > 100              then return '░░░░░░░░░░░░▌'\n  R = '░'.repeat n // 8\n  switch n %% 8\n    when 0 then R += ' '\n    when 1 then R += '▏'\n    when 2 then R += '▎'\n    when 3 then R += '▍'\n    when 4 then R += '▌'\n    when 5 then R += '▋'\n    when 6 then R += '▊'\n    when 7 then R += '▉'\n    # when 8 then R += '█'\n  return R.padEnd 13\n\n\n############################################################################################################\nif module is require.main then do =>\n  # await @demo()\n  # await @demo_inserts()\n  t0 = Date.now()\n  sleep   = ( dts ) -> new Promise ( done ) => setTimeout done, dts * 1000\n  for n in [ 0 .. 10 ]\n    s = CND.random_integer 10, 100\n    # await sleep s / 1000\n    await sleep 50 / 1000\n    t = ( Date.now() - t0 ) %% 100\n    t0 = t\n    info ( \"#{t.toFixed 5}\".padStart 20 ), '│' + ( CND.reverse @percentage_bar t ) + '│' + ( CND.reverse @hollow_percentage_bar t ) + '│'\n  return null\n\n\n\n\n\n\n\n"
  ]
}